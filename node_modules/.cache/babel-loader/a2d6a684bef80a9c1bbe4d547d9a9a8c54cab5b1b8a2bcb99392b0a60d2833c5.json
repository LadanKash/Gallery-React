{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lkash\\\\Desktop\\\\Gallery\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadForm() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = [\"image/jpeg\", \"image/png\"];\n  const handleChange = e => {\n    let selected = e.target.files[0];\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please Select an Image File (png or jpeg)');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }, this), file && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        file: file,\n        setFile: setFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"g4In/gal2dmIIDovhnep1NQJW40=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useState","ProgressBar","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","error","setError","types","handleChange","e","selected","target","files","includes","type","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","name","_c","$RefreshReg$"],"sources":["C:/Users/lkash/Desktop/Gallery/src/components/UploadForm.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { ProgressBar } from \"./ProgressBar\"\r\n\r\nexport default function UploadForm() {\r\n\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const types = [\"image/jpeg\", \"image/png\"]\r\n\r\n    const handleChange = (e) => {\r\n        let selected = e.target.files[0]\r\n        \r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected)\r\n            setError('')\r\n        } else {\r\n            setFile(null)\r\n            setError('Please Select an Image File (png or jpeg)')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={handleChange}/>\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                { error && <div className=\"error\">{ error }</div>}\r\n                { file && <div>{ file.name }</div>}\r\n                { file && <ProgressBar file={file} setFile={setFile}/>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,KAAK,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC;EAEzC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAEhC,IAAGF,QAAQ,IAAIH,KAAK,CAACM,QAAQ,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAC;MACzCV,OAAO,CAACM,QAAQ,CAAC;MACjBJ,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACHF,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,2CAA2C,CAAC;IACzD;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAOc,IAAI,EAAC,MAAM;QAACE,QAAQ,EAAER;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5CpB,OAAA;QAAAe,QAAA,EAAM;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACRpB,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAN,QAAA,GACjBV,KAAK,iBAAIL,OAAA;QAAKqB,SAAS,EAAC,OAAO;QAAAN,QAAA,EAAGV;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAC/CjB,IAAI,iBAAIH,OAAA;QAAAe,QAAA,EAAOZ,IAAI,CAACmB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAChCjB,IAAI,iBAAIH,OAAA,CAACF,WAAW;QAACK,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEA;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAClB,EAAA,CAhCuBD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}